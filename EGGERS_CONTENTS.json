{"home":{"content":"# Functions, Conditionals, Objects\n---\n\nWelcome to lecture 9! Here's a brief class breakdown.\n\n#### [Streaming Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_3)\nYour class notes for the day.\n\n\n#### Learning Objectives\n---\n\n1. Understand how conditionals and booleans can be used for programmatic decision making\n2. Understand how functions can be used to run similar tasks repeatedly.\n3. What are objects? How are they useful in programming?\n\n#### To Do Today\n---\n\n#### [Warmup](#warmup)\n#### [Functions](#functions)\n#### [Conditionals](#conditionals)\n#### [Objects](#objects)","idx":0},"title":{"content":"Functions, Conditionals, Objects","idx":1},"desc":{"content":"Introduction to JavaScript","idx":2},"warmup":{"content":"# Warmup\n---\n\n#### [Streaming Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_3)\n\n<p></p>\n\nLet's begin with a few warmup exercises.\n\n#### Exercise 1\n---\n\n**ALL IN TERMINAL**:\n\n1. **Create** a new folder in your desktop.\n2. **Create** an index.html file with some text\n3. **Create** a styles folder\n4. **Add** empty main.css\n5. **Initialize** git in this directory\n6. **Create repo** in GitHub\n7. **Push** repo to Github\n\n#### Exercise 2\n---\n\n#### [Javascript Functions Practice 2](http://samantha.fewd.us/#fork/mottaquikarim/FEWD629_JavaScript_Basics_PSET) | [LIVE](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD629_JavaScript_Basics_PSET)\n**PURPOSE**: Review basic function operations\n\n#### Review\n---\n#### [LAST Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_2)\n<p></p>\n\nTo help jog your memory, here's a quick review of some of the javascript we covered last class:\n\n#### Functions Review\n\n* The following are equivalent:\n * **A**: `1+2`\n * **B**: `add(1,2)`\n* **1** and **2** are arguments for both **A**, **B**\n* **+** is equivalent to **add()**\n* the return sum is **3**\n\nLet's define **add(...)** real quick\n```js\nfunction add(a,b) {\n    const sum = a + b;\n    return sum;\n}\n\n// remember to call add if you want\n// to __see__ it doing stuff\n\n// will this run?\nadd(1, 2);\n\n// how about this?\nconst sum = add(1, 2);\n\n// what do you expect to see?\nconsole.log(sum); \n\n```\n* Think about **add()** and **+** as similar operations\n* **+** is defined as a symbol by javascript\n* **add()** is a custom operation defined by the programmer (you)\n\n","idx":3},"functions":{"content":"# Functions\n---\n\n#### [Streaming Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_3)","idx":4},"conditionals":{"content":"# Conditionals\n---\n\n#### [Streaming Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_3)","idx":5},"objects":{"content":"# Objects\n---\n\n#### [Streaming Class Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/NYCDA_JS_Day_3)\n","idx":6},"__list__":["home","title","desc","warmup","functions","conditionals","objects"]}